name: Release

on:
  workflow_dispatch:
    inputs:
      dryRun:
        description: 'Do a dry run to preview instead of a real release'
        required: true
        default: 'true'

jobs:
  authorize:
    name: Authorize
    runs-on: ubuntu-latest
    steps:
      - name: ${{ github.actor }} permission check to do a release
        uses: "lannonbr/repo-permission-check-action@2.0.2"
        with:
          permission: "write"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [authorize]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'zulu'

      - name: Setup Android Environment
        uses: maxim-lobanov/setup-android-tools@v1
        with:
          packages: |
            build-tools;28.0.3
            platforms;android-28

      - name: Build
        run: ./gradlew build

      - name: Test
        run: ./gradlew test --info

      - name: Configure GPG
        env:
          GPG_KEY_CONTENTS: ${{ secrets.GPG_KEY_CONTENTS }}
          SIGNING_SECRET_KEY_RING_FILE: ${{ secrets.SIGNING_SECRET_KEY_RING_FILE }}
        run: |
          sudo bash -c "echo '$GPG_KEY_CONTENTS' | base64 -d > '$SIGNING_SECRET_KEY_RING_FILE'"

      - name: Configure Sonatype
        env:
          GRADLE_PROP_FILE: local.properties
        run: |
          echo "sonatypeUsername=${{ secrets.OSSRH_USERNAME }}" >> $GRADLE_PROP_FILE
          echo "sonatypePassword=${{ secrets.OSSRH_PASSWORD }}" >> $GRADLE_PROP_FILE
          echo "sonatypeStagingProfileId=${{ secrets.SONATYPE_STAGING_PROFILE_ID }}" >> $GRADLE_PROP_FILE
          echo "signing.keyId=${{ secrets.SIGNING_KEY_ID }}" >> $GRADLE_PROP_FILE
          echo "signing.password=${{ secrets.SIGNING_PASSWORD }}" >> $GRADLE_PROP_FILE
          echo "signing.secretKeyRingFile=${{ secrets.SIGNING_SECRET_KEY_RING_FILE }}" >> $GRADLE_PROP_FILE

      - name: Semantic Release --dry-run
        if: ${{ github.event.inputs.dryRun == 'true'}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_AUTHOR_NAME: amplitude-sdk-bot
          GIT_AUTHOR_EMAIL: amplitude-sdk-bot@users.noreply.github.com
          GIT_COMMITTER_NAME: amplitude-sdk-bot
          GIT_COMMITTER_EMAIL: amplitude-sdk-bot@users.noreply.github.com
        run: |
          npx \
          -p lodash \
          -p semantic-release@17 \
          -p @semantic-release/changelog@5 \
          -p @semantic-release/git@9 \
          -p @google/semantic-release-replace-plugin@1 \
          -p @semantic-release/exec@5 \
          semantic-release --dry-run

      - name: Semantic Release
        if: ${{ github.event.inputs.dryRun == 'false'}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_AUTHOR_NAME: amplitude-sdk-bot
          GIT_AUTHOR_EMAIL: amplitude-sdk-bot@users.noreply.github.com
          GIT_COMMITTER_NAME: amplitude-sdk-bot
          GIT_COMMITTER_EMAIL: amplitude-sdk-bot@users.noreply.github.com
        run: |
          npx \
          -p lodash \
          -p semantic-release@17 \
          -p @semantic-release/changelog@5 \
          -p @semantic-release/git@9 \
          -p @google/semantic-release-replace-plugin@1.20.0 \
          -p @semantic-release/exec@5 \
          semantic-release
